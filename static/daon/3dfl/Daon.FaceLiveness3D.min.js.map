{"version":3,"file":"Daon.FaceLiveness3D.min.js","sources":["../production-src/DaonFaceLiveness3dProcessor.js","../production-src/DaonFaceLiveness3DJS.js","../src/Daon.FaceLiveness3D.js"],"sourcesContent":["// part of the DaonFaceLiveness3D JS library\n// this class handles the FL3D frame by frame analysis for UI guidance,\n// controling a WebWorker loading WebAssembly code\n// Nicolas Sezille 31/07/2019\n\n\nimport DaonFaceQualityLite from \"../node_modules/identityx-onboarding-js-facequalitylite/dist/DaonFaceQualityLite\";\nimport WebWorker3DFL from \"../tmp/WebWorker3DFL\";\n\nconst urlTrackerJS = window.URL.createObjectURL(new Blob([DaonFaceQualityLite], {type: \"application/javascript\"}));\nconst urlWebWorker3DFL = window.URL.createObjectURL(new Blob([WebWorker3DFL], {type: \"application/javascript\"}));\n\nexport class DaonFaceLiveness3dProcessor {\n    constructor(urlTrackerWasm) {\n        this.__frameCount = 0;\n        this.__timesArrayTracker = [];\n        this.__timesArrayWorker = [];\n        this.__onInitializedCallback = undefined;\n        this.__onFrameAnalysisUpdate = undefined;\n        this.__onError = undefined;\n        this.__onFaceDetection = undefined;\n        this.__callbacksOwnerObj = undefined;\n        this.__workerInitialised = false;\n        this.__width = 0;\n        this.__height = 0;\n        this.__isWorkerComputing = false;\n        \n        this.__urlTrackerWasmLocation = urlTrackerWasm || (location.origin + \"/DaonFaceQualityLite.wasm\");\n        \n        this.__worker = new Worker(urlWebWorker3DFL);\n        \n        // receive messages back from the web-worker\n        var me = this;\n        this.__worker.addEventListener('message', function (e) {\n            var message = e.data;\n        \n            if (!message || !message.id) {\n                console.log('FL3D processor main: received incorrect message format -- ' + message);\n            }\n            \n            // console.log('3dfl processor: received message - ' + message);\n\n            switch (message.id) {\n                case 'initialised':\n                    me.__workerInitialised = true;\n                    me.__onInitialised(me);\n                    break;\n                \n                case 'destroyed':\n                    if (me.__onInitializedCallback) {\n                        me.__onInitializedCallback(me.__callbacksOwnerObj, false);\n                    }\n                    break;\n\n                case 'frame_analysis_result':\n                    me.__onFrameAnalysisUpdateFromWorker(me.__callbacksOwnerObj, message.msg, message.tracking_time, message.other_time, message.post_time, message.box);\n                    break;\n\n                case 'version':\n                    console.log('FL3D live processing version: ' + message.versionStr);\n                    break;\n                \n                case 'error':\n                    console.log('error in worker: ' + message.error_msg);\n                    if (me.__onError) {\n                        me.__onError(me.__callbacksOwnerObj, message.error_msg);\n                    }\n                    break;\n\n                default:\n                    console.log('FL3D processor main: received unknown message -- ' + message);\n            }\n        });\n    }\n\n    getVersion() {\n        this.__worker.postMessage({id:'get_version'});\n    }\n\n    initialize(width, height, onInitializedFn, onFrameAnalysisResultFn, onErrorFn, onFaceDetectionFn, callbackOwnerObj) {\n        this.__callbacksOwnerObj = callbackOwnerObj;\n        this.__onInitializedCallback = onInitializedFn;\n        this.__onFrameAnalysisUpdate = onFrameAnalysisResultFn;\n        this.__onFaceDetection = onFaceDetectionFn;\n        this.__onError = onErrorFn;\n        this.__width = width;\n        this.__height = height;\n\n        this.__worker.postMessage({id:'init', width: width, height: height, url_js: urlTrackerJS, url_wasm: this.__urlTrackerWasmLocation});\n    }\n\n\n    destroy() {\n        this.__worker.postMessage({id:'destroy'});\n        this.__worker.postMessage({id:'close_worker'});\n        this.__worker = undefined;\n    }\n\n\n    processFrame(imagePixelsARGB, timestamp) {\n        \n        if (!this.__isWorkerComputing) {\n            this.__isWorkerComputing = true;\n            // console.log('processing new frame');\n            \n\n            this.__worker.postMessage({id:'process', pixels: imagePixelsARGB.buffer, ts: timestamp, postTS: performance.now()});//, [imagePixelsARGB.buffer]);\n            // console.log('size of pixels array: ' + imagePixelsARGB.length)\n        }\n        else {\n            // console.log('tracker is still busy, skip frame');\n        }\n        \n    }\n\n\n    setOptionalConfig(configObj) {\n        if (configObj) {\n        }\n    }\n\n\n    getTrackerProcessingTime() {\n        var fps = -1;\n        if (this.__timesArrayTracker.length > 0) {\n            fps = this.__timesArrayTracker.reduce((accumulator, currentValue) => accumulator + currentValue);\n            fps /= this.__timesArrayTracker.length;\n        }\n        return fps;\n    }\n\n\n    getWorkerProcessingTime() {\n        var fps = -1;\n        if (this.__timesArrayWorker.length > 0) {\n            fps = this.__timesArrayWorker.reduce((accumulator, currentValue) => accumulator + currentValue);\n            fps /= this.__timesArrayWorker.length;\n        }\n        return fps;\n    }\n    \n    reset() {\n        this.__worker.postMessage({id:'reset'});\n    }\n\n    motionComplete() {\n        this.__worker.postMessage({id:'end_of_motion'});\n    }\n\n    __onFrameAnalysisUpdateFromWorker(callbackOwner, msg, trackingProcTime, other_time, postTS, faceBox) {\n        this.__isWorkerComputing = false;\n\n        var currentTS = performance.now();\n        let newSize = this.__timesArrayWorker.push(currentTS - postTS);\n        // let newSize = this.__timesArrayWorker.push(other_time);\n        if (newSize > 10) {\n            this.__timesArrayWorker.shift();\n        }\n\n        // update timings\n        newSize = this.__timesArrayTracker.push(trackingProcTime);\n        if (newSize > 10) {\n            this.__timesArrayTracker.shift();\n        }\n\n        if (msg !== 'none') {\n            this.__onFrameAnalysisUpdate(callbackOwner, msg);\n        }\n\n        // send box details for painting\n        this.__onFaceDetection(this.__callbacksOwnerObj, faceBox);\n        \n    }\n\n    __onInitialised(_this) {\n        if (_this.__workerInitialised) {\n            if (_this.__onInitializedCallback) {\n                _this.__onInitializedCallback(_this.__callbacksOwnerObj, true);\n            }\n        }\n    }\n\n\n\n\n}","// Main class of the 3DFL JS library\n// Nicolas Sezille 30/07/2019\nimport {DaonFaceLiveness3dProcessor} from \"./DaonFaceLiveness3dProcessor\"\n\nconst UPDATE_TYPES = {\n    ERROR: 'error',\n    READY: 'clrReady',\n    AWAIT_RESULTS: 'waitLiveness',\n    NOT_CENTERED: 'notCentered',\n    TOO_FAR: 'too_far',\n    TOO_CLOSE: 'too_close',\n    HOLD: 'passive_hold',\n    MOVE_CLOSER: 'move_closer',\n    END_CAPTURE: 'move_complete',\n    FACE_BOX: 'face_box'\n}\n\nexport class DaonFaceLiveness3DJS {\n    \n    constructor(urlTrackerWasm) {\n        var me = this;\n        this.__isSafari = ['iPad', 'iPhone', 'iPod', 'MacIntel'].indexOf(navigator.platform) >= 0;\n\n        // vars initialisation\n        this.width = -1;\n        this.height = -1;\n        this.videoStream = undefined;\n        this.onTplCreatedFn = undefined;\n        this.onUpdateFn = undefined;\n\n        // private\n        this.__sessionInProgress = false;\n        this.__stopAnalysisRequested = false;\n        this.__isInitialized = false;\n        this.__mediaRecorder = undefined;\n        this.__videoBlobsStore = undefined;\n        this.__recordedVideoMime = '';\n        this.__recordedVideoBitRate = 0;\n        this.__allowh264 = true;\n        this.__tsReference = 0;\n        this.__adjWidth = 0;\n        this.__xOffset = 0;\n\n        // for jpeg based template\n        this.__useJpegTpl = false;\n        this.__jpegLevel = 0.6;\n        this.__frameStore = [];\n        this.__accumulateTplFrames = false;\n        \n        // for landscape central zone extraction\n        this.__extractionCanvas = null;\n        this.__extractionCanvasCtx = null;\n        \n        this.__3dflProcessor = new DaonFaceLiveness3dProcessor(urlTrackerWasm);\n\n    }\n\n    initialize(width, height, videoStream, onUpdateFn, onTemplateCreatedFn, movementDelay = 1500) {\n        this.width = width;\n        this.height = height;\n        \n        this.videoStream = videoStream;\n        this.onTplCreatedFn = onTemplateCreatedFn;\n        this.onUpdateFn = onUpdateFn;\n        this.movementDelay = movementDelay;\n        this.__accumulateTplFrames = false;\n\n        this.__adjWidth = width;\n        this.__xOffset = 0;\n        if (width > height) {\n            this.__adjWidth = 480/640*height;\n            this.__xOffset = (width-this.__adjWidth)/2 + 1;\n        }\n\n        this.__extractionCanvas = document.createElement('canvas');\n        this.__extractionCanvas.width = this.__adjWidth;\n        this.__extractionCanvas.height = this.height;\n        this.__extractionCanvasCtx = this.__extractionCanvas.getContext('2d');\n\n        this.__3dflProcessor.initialize(this.__adjWidth, this.height, this.__onProcessorInitialized, this.__onFrameAnalysisResult, this.__onError, this.__onFaceDetection, this);\n        \n        this.__initialiseVideoRecording();\n    }\n\n    setOptionalConfig(configObj) {\n        var recording_config_changed = false;\n        if (configObj) {\n            if (typeof configObj.allowh264 == 'boolean') {\n                if (this.__allowh264 != configObj.allowh264) {\n                    this.__allowh264 = configObj.allowh264;\n                    recording_config_changed = true;\n                }\n            }\n\n            if (typeof configObj.useJpegTpl == 'boolean') {\n                if (this.__useJpegTpl != configObj.useJpegTpl) {\n                    this.__useJpegTpl = configObj.useJpegTpl;\n                    recording_config_changed = true;\n                }\n            }\n\n            if (typeof configObj.jpegLevel == 'number') {\n                if (isFinite(configObj.jpegLevel) && configObj.jpegLevel>0 && configObj.jpegLevel<=1) {\n                    this.__jpegLevel = configObj.jpegLevel;\n                }\n            } else if (typeof configObj.jpegLevel == 'string') {\n                if (configObj.jpegLevel === 'png') {\n                    this.__jpegLevel = configObj.jpegLevel;\n                }\n            }\n        }\n\n        if (recording_config_changed && this.__isInitialized) {\n            this.__initialiseVideoRecording();\n        }\n    }\n\n    get3DFLActiveArea() {\n        var rect = {\n            x: this.__xOffset,\n            y: 0,\n            width: this.__adjWidth,\n            height: this.height\n        };\n\n        return rect;\n    }\n\n\n    __initialiseVideoRecording() {\n        \n        // safari's support is limited\n        if (window.MediaRecorder && typeof MediaRecorder.isTypeSupported == 'function' && !this.__useJpegTpl) {\n            // try H264\n            var options = {mimeType: ''};\n\n            if (this.__allowh264) {\n                if (MediaRecorder.isTypeSupported('video/webm;codecs=h264')) {\n                    options.mimeType = 'video/webm;codecs=H264';\n                }\n            }\n\n            if (options.mimeType == '') {\n                if (MediaRecorder.isTypeSupported('video/webm;codecs=vp8')) {\n                    options.mimeType = 'video/webm;codecs=vp8';\n                }\n            }\n            \n            options.videoBitsPerSecond = 2500000;\n            this.__recordedVideoBitRate = options.videoBitsPerSecond;\n\n            try {\n                this.__mediaRecorder = new MediaRecorder(this.videoStream, options);\n            } catch (e) {\n                console.error('Exception while creating MediaRecorder: ' + e);\n                alert('Exception while creating MediaRecorder: ' + e + '. mimeType: ' + options.mimeType);\n                return;\n            }\n\n            this.__recordedVideoMime = options.mimeType;\n        }\n        else {\n            // use jpeg templates\n            this.__useJpegTpl = true;\n            this.__mediaRecorder = null;\n        }\n\n        if (!this.__useJpegTpl) {\n            console.log('Created MediaRecorder', this.__mediaRecorder);\n\n            this.__videoBlobsStore = [];\n            this.__mediaRecorder.onstop = (event)=>{this.__onMediaRecorderStopped(event);};\n            this.__mediaRecorder.ondataavailable = (event)=>{this.__onMediaRecorderDataAvailable(event);}; // using arraw function binds \"this\"\n        }\n    }\n\n    isInitialized() {\n        return this.__isInitialized;\n    }\n\n    \n    startSession() {\n        this.__3dflProcessor.reset();\n        this.__sessionInProgress = true;\n        this.__stopAnalysisRequested = false;\n        this.__tsReference = 0;\n        this.__accumulateTplFrames = false;\n        this.__frameStore.length = 0;\n    }\n\n\n    processFrame(imageData, currentTS) {\n\n        if (this.__3dflProcessor) {\n            // now do the processing\n            if (this.__isInitialized && !this.__stopAnalysisRequested) {\n                if (this.__tsReference === 0) {\n                    this.__tsReference = currentTS;\n                }\n                currentTS -= this.__tsReference;\n                // console.log('processFrame ' + currentTS);\n\n                if (this.width > this.height) {\n                    this.__extractionCanvasCtx.putImageData(imageData, -this.__xOffset, 0,\n                        this.__xOffset, 0, this.__adjWidth, this.height);\n\n                    var centralImageData = this.__extractionCanvasCtx.getImageData(0, 0, this.__adjWidth, this.height).data;\n                } else {\n                    var centralImageData = imageData.data;\n                }\n\n                // the processing is done by a web worker thread, to cope with slow devices\n                this.__3dflProcessor.processFrame(centralImageData, currentTS);\n\n                if (this.__accumulateTplFrames) {\n                    if (this.__frameStore.length == 0 || \n                            currentTS > (this.__frameStore[0].ts+this.__frameStore.length*100-0.1*100) ) {\n                        this.__frameStore.push({\n                            data: imageData.data.buffer,\n                            width: imageData.width,\n                            height: imageData.height,\n                            ts: currentTS,\n                            level: this.__jpegLevel\n                        });\n                    }   \n                }\n            }\n        }\n    }\n\n\n    terminate() {\n        if (this.__3dflProcessor) {\n            this.__3dflProcessor.destroy();\n            this.__3dflProcessor = undefined;\n        }\n        this.__isInitialized = false;\n    }\n\n\n    getTrackerProcessingTime() {\n        var fps = -1;\n        if (this.__3dflProcessor) {\n            fps = this.__3dflProcessor.getTrackerProcessingTime();\n        }\n\n        return fps;\n    }\n\n\n    getWorkerProcessingTime() {\n        var fps = -1;\n        if (this.__3dflProcessor) {\n            fps = this.__3dflProcessor.getWorkerProcessingTime();\n        }\n\n        return fps;\n    }\n\n\n    // this is a callback function, called from a different context\n    __onFrameAnalysisResult(_this, msg) {\n        if (msg === 'too_far') {\n            _this.onUpdateFn(UPDATE_TYPES.TOO_FAR);\n        } \n        else if (msg === 'too_close') {\n            _this.onUpdateFn(UPDATE_TYPES.TOO_CLOSE);\n        } \n        else if (msg == 'not_centered') {\n            _this.onUpdateFn(UPDATE_TYPES.NOT_CENTERED);\n        }\n        else if (msg === 'good_position') {\n            _this.onUpdateFn(UPDATE_TYPES.HOLD);\n            if (!_this.__useJpegTpl) {\n                _this.__videoBlobsStore = [];\n                _this.__mediaRecorder.start(200);\n            } else {\n                _this.__accumulateTplFrames = true;\n            }\n\n            setTimeout(()=>{\n                _this.onUpdateFn(UPDATE_TYPES.MOVE_CLOSER); \n                setTimeout(() => {\n                    _this.onUpdateFn(UPDATE_TYPES.END_CAPTURE);\n                    _this.__on3dflTimeUp(_this);\n                    \n                }\n                , 2300);\n\n            }\n            , this.__callbacksOwnerObj.movementDelay);\n        }\n\n    }\n\n\n    __onFaceDetection(_this, faceBox) {\n        var shiftedFaceBox = faceBox;\n        shiftedFaceBox.x = faceBox.x + _this.__xOffset;\n        _this.onUpdateFn(UPDATE_TYPES.FACE_BOX, shiftedFaceBox);\n    }\n\n\n    // this is a callback function, called from a different context\n    __onProcessorInitialized(_this) {\n        _this.__isInitialized = true;\n        _this.onUpdateFn(UPDATE_TYPES.READY);\n    }\n\n\n    // this is a callback function, called from a different context\n    __onError(_this, msg) {\n        _this.onUpdateFn(UPDATE_TYPES.ERROR, msg);\n    }\n\n\n    // external callback\n    __on3dflTimeUp(_this) {\n        if (!this.__useJpegTpl) {\n            _this.__mediaRecorder.stop();\n        } else {\n            _this.__accumulateTplFrames = false;\n            _this.__packageData(_this, null).then((tpl)=>{\n                _this.onTplCreatedFn(tpl);\n                _this.__3dflProcessor.motionComplete()\n            });\n        }\n\n    }\n\n\n    async __packageData(_this, videoBlob) {\n        var packagingStartTS = performance.now();\n\n        if (_this.__useJpegTpl) {\n            var jpegArray = _this.__encodeJpegs(_this);\n        }\n        else {\n            var videoArrayBuffer = await new Response(videoBlob).arrayBuffer();\n        }\n\n        // binary Web3DFL template v1:\n        // sig, version, videoMimeSize, videoMimeStr, videoBitRate, videoDataSize, videoData\n        // var dataTplSize = 8 + 4 + 4 + encodedMimeString.length + 4 + 4 + videoArrayBuffer.byteLength;\n\n        // binary Web3DFL template v2:\n        // sig, version, mediaType, jsonStrSize, jsonStr, videoDataSize, videoData\n        // sig, version, mediaType, jsonStrSize, jsonStr, imageDataSize, jpegSize, jpedData, ..., jpegSize, jpegData\n        // mediaType: video=0, jpeg=1\n        \n        var metadataObj = {\n            mime: '',\n            width: _this.width,\n            height: _this.height,\n            client: navigator.userAgent\n        }\n\n        var dataTplSize = 8 + 4 + 4 + 4; //commun part\n\n        if (_this.__useJpegTpl) {\n            let accumJpegSize = 0;\n            let tsArray = [];\n            let levelsArray = [];\n            for (let index = 0; index < jpegArray.length; index++) {\n                accumJpegSize += jpegArray[index].bytes.length;\n                tsArray.push(jpegArray[index].ts);\n                levelsArray.push(jpegArray[index].level);\n            }\n\n            metadataObj.mime = 'image/jpeg';\n            if (this.__jpegLevel === 'png') {\n                metadataObj.mime = 'image/png';\n            }\n            metadataObj.nbFrames = jpegArray.length;\n            metadataObj.timestamps = tsArray;\n            metadataObj.jpegLevels = levelsArray;\n\n            var frameStorageSize = metadataObj.nbFrames * 4 + accumJpegSize;\n        }\n        else {\n            metadataObj.mime = _this.__recordedVideoMime;\n            metadataObj.requestedBitrate = _this.__recordedVideoBitRate;\n            var frameStorageSize = videoArrayBuffer.byteLength;\n        }\n\n        var encodedMetadataStr = new TextEncoder().encode(JSON.stringify(metadataObj));\n\n        dataTplSize += encodedMetadataStr.byteLength + 4 + frameStorageSize;\n\n        var dataTpl = new ArrayBuffer(dataTplSize);\n        var dataTplView = new DataView(dataTpl, 0, dataTplSize);\n\n        let currentIdx = 0;\n        const headerStr = 'Web3DFL.';\n        for (let i = 0; i < headerStr.length; ++i) {\n            dataTplView.setUint8(currentIdx++, headerStr.charCodeAt(i));\n        }\n\n        dataTplView.setUint32(currentIdx, 2, true); currentIdx += 4; // version\n        dataTplView.setUint32(currentIdx, _this.__useJpegTpl?1:0, true); currentIdx += 4; // mediaType\n        dataTplView.setUint32(currentIdx, encodedMetadataStr.length, true); currentIdx += 4; // length of the metadata json string\n        // write the json string \n        let stringArea = new Uint8Array(dataTpl, currentIdx, encodedMetadataStr.length);\n        stringArea.set(encodedMetadataStr, 0);\n        currentIdx += encodedMetadataStr.length; // json string\n\n        dataTplView.setUint32(currentIdx, frameStorageSize, true); currentIdx += 4; // size of the frame data storing section\n\n        if (_this.__useJpegTpl) {\n            for (let index = 0; index < jpegArray.length; index++) {\n                let jpegSize = jpegArray[index].bytes.length;\n                dataTplView.setUint32(currentIdx, jpegSize, true); currentIdx += 4; // size of the jpeg\n\n                var jpegBytesArea = new Uint8Array(dataTpl, currentIdx, jpegSize);\n                jpegBytesArea.set(new Uint8Array(jpegArray[index].bytes), 0);\n                currentIdx += jpegSize; // jpeg bytes\n            }\n        }\n        else {\n            // write the video blob\n            var videoBytesArea = new Uint8Array(dataTpl, currentIdx, videoArrayBuffer.byteLength);\n            videoBytesArea.set(new Uint8Array(videoArrayBuffer), 0);\n            currentIdx += videoArrayBuffer.byteLength;\n        }\n\n        var timeSpent = performance.now() - packagingStartTS;\n\n        // var msg = document.createElement('p');\n        // msg.innerHTML = 'packaging completed in ' + Math.round(timeSpent) + ' ms'\n        //     + '<br>mode: ' + (_this.__useJpegTpl?'jpeg':'vp8') + ', size: ' + Math.round(dataTpl.byteLength/1024) + ' KB';\n        // document.getElementById('clientcontainer').appendChild(msg);\n        \n\n        return dataTpl;\n    }\n\n\n    __encodeJpegs(_this) {\n        var startJpegEncoding = performance.now();\n        let jpegArray = [];\n        \n        if (_this.__frameStore.length > 0) {\n            let jpgEncodingCanvas = document.createElement('canvas');\n            const width = _this.__frameStore[0].width;\n            const height = _this.__frameStore[0].height;\n            jpgEncodingCanvas.width = width;\n            jpgEncodingCanvas.height = height;\n            let jpgEncodingCanvasCtx = jpgEncodingCanvas.getContext('2d');\n\n            for (let imgIdx = 0; imgIdx < _this.__frameStore.length; imgIdx++) {                \n                const pixelData = _this.__frameStore[imgIdx].data;\n                const timestamp = _this.__frameStore[imgIdx].ts;\n                const level = _this.__frameStore[imgIdx].level;\n\n                _this.__frameStore[imgIdx] = null;\n\n                let imageData = new ImageData(new Uint8ClampedArray(pixelData), width, height);\n                jpgEncodingCanvasCtx.putImageData(imageData, 0, 0);\n\n                // this is the fastest method on average, chrome on android is the weak link\n                let jpegStartTS = performance.now();\n                if (level === 'png') {\n                    var dataURL = jpgEncodingCanvas.toDataURL('image/png');\n                } else {\n                    var dataURL = jpgEncodingCanvas.toDataURL('image/jpeg', level);\n                }\n\n                // var encodedJpeg = await (await fetch(dataURL)).blob();\n                let binStr = atob(dataURL.split(',')[1]),\n                    len = binStr.length,\n                    encodedJpeg = new Uint8Array(len);\n\n                for (var i = 0; i < len; i++) {\n                    encodedJpeg[i] = binStr.charCodeAt(i);\n                }\n                // var jpegBlob = await this.__async_jpeg_to_blob(jpgEncodingCanvas, 'image/jpeg', level);\n\n                // if (imgIdx==0) {\n                //     var link = document.createElement(\"a\");\n                //     link.download = 'test_jpeg.jpg';\n                //     link.href = window.URL.createObjectURL(jpegBlob);\n                //     document.body.appendChild(link);\n                //     link.click();\n                //     document.body.removeChild(link);\n                // }\n\n                jpegArray.push({bytes: encodedJpeg,\n                    ts: timestamp,\n                    level: (level==='png')?1:level});\n            }\n\n            this.__frameStore.length = 0; // JS clear\n        }\n\n        console.log('jpeg encoding completed in ' + (performance.now()-startJpegEncoding) + ' ms for ' + jpegArray.length + ' frames');\n        \n        return jpegArray;\n    }\n\n    \n    // __async_jpeg_to_blob(canvas, mimeType, qualityArgument) {\n    //     return new Promise((resolve) => {\n    //         canvas.toBlob((blob)=> {\n    //             return resolve(blob);\n    //         }, mimeType, qualityArgument);\n    //     });\n    // }\n\n    // media recorder has stopped, all data blobs where pushed\n    __onMediaRecorderStopped(event) {\n        console.log('Recorder stopped: ', event);\n        console.log('Recorded Blobs: ', this.__videoBlobsStore);\n    \n        // upload data:\n        var blob = new Blob(this.__videoBlobsStore, { 'type' : this.__recordedVideoMime});\n        this.__videoBlobsStore = [];\n\n        this.__packageData(this, blob).then((tpl)=>{\n            this.onTplCreatedFn(tpl);\n            this.__3dflProcessor.motionComplete()\n        });\n        \n    }\n\n\n    // a new blob of video data is available\n    __onMediaRecorderDataAvailable(event) {\n        console.log('Recorder on data available: ' + event.data.size);\n        if (event.data && event.data.size > 0) {\n            this.__videoBlobsStore.push(event.data);\n        }\n    }\n\n}\n\n\n// Microsoft Edge support\nif (!window.TextEncoder) {\n    window.TextEncoder = function TextEncoder() {\n\n    }\n\n    window.TextEncoder.prototype.encode = function (s) {\n        const e = new Uint8Array(s.length);\n\n        for (let i = 0; i < s.length; i += 1) {\n            e[i] = s.charCodeAt(i);\n        }\n\n        return e;\n    }\n}\n\nDaonFaceLiveness3DJS.UPDATE_TYPES = UPDATE_TYPES;","import { DaonFaceLiveness3DJS } from \"../production-src/DaonFaceLiveness3DJS\"\nimport { version } from \"../package.json\"\n\n/* eslint-disable no-unused-vars */\n/**\n * @namespace\n */\nconst Daon = {}\n/* eslint-enable no-unused-vars */\n\n/**\n * @class\n * @alias Daon.FaceLiveness3D\n * @extends DaonFaceLiveness3DJS\n */\nexport class FaceLiveness3D extends DaonFaceLiveness3DJS {\n  /**\n   * \n   * @param {string} DFQ_WASM - URL of wasm binary for FaceLiveness3D. It is recommended to use an absolute URL\n   */\n  constructor(DFQ_WASM) {\n    super(DFQ_WASM)\n  }\n\n  /**\n   * Initializes the liveness engine\n   * @param {Object} config - should have the following properties:\n   * @param {HTMLVideoElement} config.video (**mandatory**) - Video element that streams the object for tracking\n   * @param {function} config.onUpdate (**mandatory**) - Callback on liveness updates. \n   * Updates are called whenever an important event occurs or there is a sugestive information to be sent. \n   * The callback function will receive two arguments, one of which is the update type (`Daon.FaceLiveness3D.UPDATE_TYPES`) \n   * that can be one of the following:\n   * <ul>\n   *  <li>`ERROR`</li>\n   *  <li>`READY`</li>\n   *  <li>`AWAIT_RESULTS`</li>\n   *  <li>`NOT_CENTERED`</li>\n   *  <li>`TOO_FAR`</li>\n   *  <li>`TOO_CLOSE`</li>\n   *  <li>`HOLD`</li>\n   *  <li>`MOVE_CLOSER`</li>\n   *  <li>`END_CAPTURE`</li>\n   *  <li>`FACE_BOX`</li>\n   * </ul>\n   * The second and face box (when Daon.FaceLiveness3D.UPDATE_TYPES.FACE_BOX occurs). In this example format:\n   * \n   * ``` js\n   * {\n   *   x: 146.5 //upper left x coordinate\n   *   y: 237.5 //upper left y coordinate\n   *   width: 145.5 //width\n   *   height: 145.25 //height\n   * }\n   * ```\n   * @param {function} config.onTemplateCreated (**mandatory**) - \n   * @param {Number} [config.movementDelay] - Delay before movement test starts in miliseconds. Should be long enough so the user can acknowledge that test will begin\n   */\n  initialize(config) {\n    const { video, onUpdate, onTemplateCreated, movementDelay } = config;\n    const { width, height } = video.srcObject.getVideoTracks()[0].getSettings();\n    if (!width || !height) {\n      throw new Error('width and height not available in video stream!')\n    }\n    super.initialize(width, height, video.srcObject, onUpdate, tpl => {\n      onUpdate(DaonFaceLiveness3DJS.UPDATE_TYPES.AWAIT_RESULTS);\n      onTemplateCreated(tpl);\n    }, movementDelay);\n    this.video = video;\n  }\n\n  /**\n   * Starts processing\n   */\n  startProcessing() {\n    this.processingActive = true;\n    _startProcessing(this);\n  }\n\n  /**\n   * Sets optional configuration\n   * @param {Object} configuration \n   */\n  setOptionalConfig(configuration) {\n    const config = Object.assign({}, configuration)\n    // 'png' is a special case, for research data collection, \n    // do not allow this on production code\n    if (config.compression && config.compression !== 'png') {\n      config.compression = parseFloat(config.compression);\n    }\n\n    super.setOptionalConfig(config);\n  }\n\n\n  /**\n   * Terminates FaceLiveness3D engine\n   */\n  terminate() {\n    this.processingActive = false;\n    super.terminate();\n  }\n}\n\nfunction _startProcessing(instance) {\n\n  var fpsLimit = 20;\n  var interval = 1000 / fpsLimit;\n\n  var oldTS = Date.now();\n  var delta;\n\n  const frameGrabberCanvas = document.createElement(\"canvas\");\n  const frameGrabberCanvasCtx = frameGrabberCanvas.getContext('2d');\n\n  setTimeout(processFrame, 20);\n\n  function processFrame() {\n    //processing deactivated\n    if (!instance.processingActive) return;\n\n    if (!instance.video) {\n      console.warn(\"Daon.FaceLiveness3D - Video element is not available. Processing terminated.\")\n      return;\n    }\n    const track = instance.video.srcObject.getVideoTracks()[0];\n    if (track.readyState === \"ended\") {\n      console.warn(\"Daon.FaceLiveness3D - Video element is available but streaming has ended. Processing terminated.\")\n      return;\n    }\n    setTimeout(processFrame, 40);\n    const currentTS = Date.now();\n    delta = currentTS - oldTS;\n\n    if (delta >= interval && instance.isInitialized()) {\n      oldTS = currentTS - (delta % interval);\n      const { width, height } = instance.video.srcObject.getVideoTracks()[0].getSettings();\n\n      frameGrabberCanvas.width = width;\n      frameGrabberCanvas.height = height;\n      frameGrabberCanvasCtx.drawImage(instance.video, 0, 0, width, height);\n\n      //Access pixel data\n      var imageData = frameGrabberCanvasCtx.getImageData(0, 0, width, height);\n\n      instance.processFrame(imageData, currentTS);\n    }\n  }\n}\n\nFaceLiveness3D.VERSION = version;\n\nFaceLiveness3D.UPDATE_TYPES = DaonFaceLiveness3DJS.UPDATE_TYPES"],"names":["urlTrackerJS","window","URL","createObjectURL","Blob","type","urlWebWorker3DFL","DaonFaceLiveness3dProcessor","[object Object]","urlTrackerWasm","this","__frameCount","__timesArrayTracker","__timesArrayWorker","__onInitializedCallback","undefined","__onFrameAnalysisUpdate","__onError","__onFaceDetection","__callbacksOwnerObj","__workerInitialised","__width","__height","__isWorkerComputing","__urlTrackerWasmLocation","location","origin","__worker","Worker","me","addEventListener","e","message","data","id","console","log","__onInitialised","__onFrameAnalysisUpdateFromWorker","msg","tracking_time","other_time","post_time","box","versionStr","error_msg","postMessage","width","height","onInitializedFn","onFrameAnalysisResultFn","onErrorFn","onFaceDetectionFn","callbackOwnerObj","url_js","url_wasm","imagePixelsARGB","timestamp","pixels","buffer","ts","postTS","performance","now","configObj","fps","length","reduce","accumulator","currentValue","callbackOwner","trackingProcTime","faceBox","currentTS","newSize","push","shift","_this","UPDATE_TYPES","ERROR","READY","AWAIT_RESULTS","NOT_CENTERED","TOO_FAR","TOO_CLOSE","HOLD","MOVE_CLOSER","END_CAPTURE","FACE_BOX","DaonFaceLiveness3DJS","__isSafari","indexOf","navigator","platform","videoStream","onTplCreatedFn","onUpdateFn","__sessionInProgress","__stopAnalysisRequested","__isInitialized","__mediaRecorder","__videoBlobsStore","__recordedVideoMime","__recordedVideoBitRate","__allowh264","__tsReference","__adjWidth","__xOffset","__useJpegTpl","__jpegLevel","__frameStore","__accumulateTplFrames","__extractionCanvas","__extractionCanvasCtx","__3dflProcessor","onTemplateCreatedFn","movementDelay","document","createElement","getContext","initialize","__onProcessorInitialized","__onFrameAnalysisResult","__initialiseVideoRecording","recording_config_changed","allowh264","useJpegTpl","jpegLevel","isFinite","x","y","MediaRecorder","isTypeSupported","options","mimeType","videoBitsPerSecond","error","alert","onstop","event","__onMediaRecorderStopped","ondataavailable","__onMediaRecorderDataAvailable","reset","imageData","putImageData","centralImageData","getImageData","processFrame","level","destroy","getTrackerProcessingTime","getWorkerProcessingTime","start","setTimeout","__on3dflTimeUp","shiftedFaceBox","__packageData","then","tpl","motionComplete","stop","videoBlob","packagingStartTS","jpegArray","__encodeJpegs","videoArrayBuffer","Response","arrayBuffer","metadataObj","mime","client","userAgent","dataTplSize","accumJpegSize","tsArray","levelsArray","index","bytes","nbFrames","timestamps","jpegLevels","frameStorageSize","requestedBitrate","byteLength","encodedMetadataStr","TextEncoder","encode","JSON","stringify","dataTpl","ArrayBuffer","dataTplView","DataView","currentIdx","i","setUint8","charCodeAt","setUint32","Uint8Array","set","jpegSize","startJpegEncoding","jpgEncodingCanvas","jpgEncodingCanvasCtx","imgIdx","pixelData","ImageData","Uint8ClampedArray","dataURL","toDataURL","binStr","atob","split","len","encodedJpeg","blob","size","prototype","s","FaceLiveness3D","constructor","DFQ_WASM","config","video","onUpdate","onTemplateCreated","srcObject","getVideoTracks","getSettings","Error","startProcessing","processingActive","instance","delta","interval","oldTS","Date","frameGrabberCanvas","frameGrabberCanvasCtx","warn","track","readyState","isInitialized","drawImage","_startProcessing","setOptionalConfig","configuration","Object","assign","compression","parseFloat","terminate","VERSION"],"mappings":"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"}